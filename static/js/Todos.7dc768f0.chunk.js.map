{"version":3,"sources":["views/ViewStyles.module.scss","components/Todos/TodoStats.jsx","components/Todos/TodoItem.jsx","components/Todos/TodoList.jsx","components/Todos/TodoEditor.jsx","components/Todos/TodoFilter.jsx","components/Modal/Modal.jsx","components/Todos/Todos.jsx","views/TodoView.jsx"],"names":["module","exports","Stats","total","useSelector","todosSelectors","getTotalTodoCount","completed","getCompletedTodoCount","className","TodoItem","id","text","dispatch","useDispatch","deleteTodo","useCallback","todosOperations","completeTodo","toggleCompleted","Checkbox","type","checked","onChange","color","inputProps","IconButton","onClick","disabled","aria-label","component","TodoList","todos","getVisibleTodos","map","classNames","TodoEditor","onCloseModal","useState","message","setMessage","inputRef","useRef","useEffect","current","focus","handleChange","e","currentTarget","value","handleSubmit","preventDefault","alert","addTodo","onSubmit","TextField","autoComplete","label","multiline","rows","variant","Button","useStyles","makeStyles","theme","root","display","marginBottom","width","refs","tablet","desktop","borderBottom","borderRadius","TodoFilter","filterRef","getFilter","changeFilter","target","s","list","reusedModalRoot","document","querySelector","Modal","children","onClose","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Todos","showModal","setShowModal","fetchTodos","toggleModal","prevShowModal","withRouter","location","history","isLoadingTodos","todoSelectors","getLoading","section","goBackBtn","state","from","push","container","Loading","useList","strong","shortid","generate"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,UAAY,8BAA8B,UAAY,8BAA8B,QAAU,4BAA4B,QAAU,4BAA4B,OAAS,2BAA2B,MAAQ,4B,iKCGrP,SAASC,IACtB,IAAMC,EAAQC,YAAYC,IAAeC,mBACnCC,EAAYH,YAAYC,IAAeG,uBAE7C,OACE,sBAAKC,UAAU,QAAf,UACE,4BACE,2CAAcN,OAEhB,4BACE,+CAAkBI,U,0DC2CXG,EAjDE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,KAAML,EAAgB,EAAhBA,UACtBM,EAAWC,cAGXC,EAAaC,uBACjB,kBAAMH,EAASI,IAAgBF,WAAWJ,MAC1C,CAACE,EAAUF,IAIPO,EAAeF,uBACnB,kBACEH,EACEI,IAAgBE,gBAAgB,CAC9BR,KACAJ,WAAYA,OAGlB,CAACM,EAAUF,EAAIJ,IAGjB,OACE,qCACE,gCACE,cAACa,EAAA,EAAD,CACEC,KAAK,WACLZ,UAAU,qBACVa,QAASf,EACTgB,SAAUL,EACVM,MAAM,UACNC,WAAY,CAAE,aAAc,0BAGhC,mBAAGhB,UAAU,iBAAb,SAA+BG,IAC/B,cAACc,EAAA,EAAD,CACEL,KAAK,SACLZ,UAAU,gBACVkB,QAASZ,EACTa,UAAWrB,EACXiB,MAAM,UACNK,aAAW,cACXC,UAAU,OAPZ,SASE,cAAC,IAAD,UCvBOC,EArBE,WACf,IAAMC,EAAQ5B,YAAYC,IAAe4B,iBAEzC,OACE,oBAAIxB,UAAU,WAAd,SACGuB,EAAME,KAAI,YAA8B,IAA3BvB,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,KAAML,EAAgB,EAAhBA,UACtB,OACE,oBAEEE,UAAW0B,IAAW,iBAAkB,CACtC,4BAA6B5B,IAHjC,SAME,cAAC,EAAD,CAAUI,GAAIA,EAAIC,KAAMA,EAAML,UAAWA,KALpCI,S,0BCVF,SAASyB,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,aAAgB,EACrBC,mBAAS,IADY,mBAC5CC,EAD4C,KACnCC,EADmC,KAE7C3B,EAAWC,cACX2B,EAAWC,mBAEjBC,qBAAU,WACRF,EAASG,QAAQC,WAInB,IAAMC,EAAe9B,uBAAY,SAAA+B,GAC/BP,EAAWO,EAAEC,cAAcC,SAC1B,IAGGC,EAAelC,uBACnB,SAAA+B,GACEA,EAAEI,iBAEc,KAAZZ,GACFa,MAAM,kFAERvC,EAASI,IAAgBoC,QAAQd,IACjCF,IACAG,EAAW,MAEb,CAAC3B,EAAU0B,EAASF,IAGtB,OACE,uBAAM5B,UAAU,aAAa6C,SAAUJ,EAAvC,UACE,uBAAOzC,UAAU,6BAAjB,SACE,cAAC8C,EAAA,EAAD,CACE9C,UAAU,uBACV+C,aAAa,MACbP,MAAOV,EACPhB,SAAUuB,EACVnC,GAAG,4BACH8C,MAAM,YACNC,WAAS,EACTC,KAAM,EACNC,QAAQ,WACRnB,SAAUA,MAGd,cAACoB,EAAA,EAAD,CACEpD,UAAU,kBACVmD,QAAQ,YACRpC,MAAM,UACNH,KAAK,SAJP,uB,2BC1CAyC,EAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAM,CACJC,QAAS,QACTC,aAAc,GAEd,YACE3C,MAAO,OACP4C,MAAO,QAFT,2CAIyBC,IAAKC,OAJ9B,OAI4C,CACxCF,MAAO,oBALX,2CAQyBC,IAAKE,QAR9B,OAQ6C,CACzCH,MAAO,oBATX,GAaA,mCAAoC,CAClC5C,MAAO,WAGT,uCAAwC,CACtCgD,aAAc,iBACdC,aAAc,GAGhB,8BAA+B,CAC7BD,aAAc,mBAGhB,wDAAyD,CACvDA,aAAc,uBAKL,SAASE,IACtB,IAAM7D,EAAWC,cACX6D,EAAYjC,mBACZO,EAAQ7C,YAAYC,IAAeuE,WACnCrD,EAAWP,uBAAY,SAAA+B,GAAC,OAAIlC,EAASgE,YAAa9B,EAAE+B,OAAO7B,UAAS,CACxEpC,IAGIkE,EAAIjB,IAMV,OACE,cAACP,EAAA,EAAD,CACElC,KAAK,OACLZ,UAAWsE,EAAEd,KACbT,aAAa,MACbwB,KAAK,GACL/B,MAAOA,EACP1B,SAAUA,EACVZ,GAAG,iBACH8C,MAAM,iBACNhB,SAAUkC,I,8BChEVM,G,OAAkBC,SAASC,cAAc,gBAEhC,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAExC3C,qBAAU,WACR,IAAM4C,EAAgB,SAAAxC,GACT,WAAXA,EAAEyC,MAAqBF,KAOzB,OAHAG,OAAOC,iBAAiB,UAAWH,GAG5B,WACLE,OAAOE,oBAAoB,UAAWJ,MAEvC,CAACD,IAOJ,OAAOM,uBACL,qBAAKnF,UAAU,kBAAkBkB,QALP,SAAAoB,GAC1BA,EAAEC,gBAAkBD,EAAE+B,QAAUQ,KAIhC,SACE,qBAAK7E,UAAU,iBAAf,SAAiC4E,MAEnCJ,GCpBW,SAASY,IAAS,IAAD,EACIvD,oBAAS,GADb,mBACvBwD,EADuB,KACZC,EADY,KAExBlF,EAAWC,cAEjB6B,qBAAU,WACR9B,EAASI,IAAgB+E,cACxB,CAACnF,IAEJ,IAAMoF,EAAcjF,uBAAY,WAC9B+E,GAAa,SAAAG,GAAa,OAAKA,OAC9B,IAEH,OACE,qCACE,cAAChG,EAAD,IACA,cAAC2D,EAAA,EAAD,CACEpD,UAAU,gBACVkB,QAASsE,EACTrC,QAAQ,YACRpC,MAAM,UACNH,KAAK,SALP,wBAUCyE,GACC,eAAC,EAAD,CAAOR,QAASW,EAAhB,UACE,sBAAMxF,UAAU,sBAAhB,SACE,cAACiB,EAAA,EAAD,CACEjB,UAAU,iBACVkB,QAASsE,EACTzE,MAAM,UACNK,aAAW,iBACXC,UAAU,OALZ,SAOE,cAAC,IAAD,QAGJ,cAACM,EAAD,CAAYC,aAAc4D,OAI9B,cAACvB,EAAD,IACA,cAAC,EAAD,O,sCCWSyB,uBAzDE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACtBC,EAAiBlG,YAAYmG,IAAcC,YAQjD,OACE,qCACE,0BAAS/F,UAAWsE,IAAE0B,QAAtB,UACE,wBAAQhG,UAAWsE,IAAE2B,UAAWrF,KAAK,SAASM,QAT/B,WACnByE,EAASO,OAASP,EAASO,MAAMC,KAC7BP,EAAQQ,KAAKT,EAASO,MAAMC,MAC5BP,EAAQQ,KAAK,kBAMb,4BAGA,sBAAKpG,UAAWsE,IAAE+B,UAAlB,UACE,uCAEGR,GAAkB,sBAAM7F,UAAWsE,IAAEgC,QAAnB,4BAErB,cAAClB,EAAD,IACA,cAAC,IAAD,UAIJ,qBAAIpF,UAAWsE,IAAEiC,QAAjB,UACE,oBAAIvG,UAAWsE,IAAEkC,OAAjB,oBACA,0CACA,2CACA,wCACA,6CACA,oBAAIxG,UAAWsE,IAAEkC,OAAjB,2BACA,wDACA,4CACA,8CACA,8CACA,sDACA,+CACA,+CACA,2CACA,iDACA,8DACA,iDACA,2CACA,gDACA,sDACA,oDAAuBC,IAAQC,cAC/B,mDACA,sDACA,mDACA,iDACA","file":"static/js/Todos.7dc768f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ViewStyles_section__AuNei\",\"goBackBtn\":\"ViewStyles_goBackBtn__3UJi4\",\"container\":\"ViewStyles_container__3TyNI\",\"Loading\":\"ViewStyles_Loading__23h_i\",\"useList\":\"ViewStyles_useList__3vLRS\",\"strong\":\"ViewStyles_strong__3kEIs\",\"toast\":\"ViewStyles_toast__3PgFy\"};","import { useSelector } from 'react-redux';\nimport { todosSelectors } from '../../redux/todos';\nimport './TodoStyles.scss';\n\nexport default function Stats() {\n  const total = useSelector(todosSelectors.getTotalTodoCount);\n  const completed = useSelector(todosSelectors.getCompletedTodoCount);\n\n  return (\n    <div className=\"Stats\">\n      <p>\n        <span>Total: {total}</span>\n      </p>\n      <p>\n        <span>Completed: {completed}</span>\n      </p>\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { todosOperations } from '../../redux/todos';\nimport { IconButton } from '@material-ui/core';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './TodoStyles.scss';\n\nconst TodoItem = ({ id, text, completed }) => {\n  const dispatch = useDispatch();\n\n  // useCallback\n  const deleteTodo = useCallback(\n    () => dispatch(todosOperations.deleteTodo(id)),\n    [dispatch, id],\n  );\n\n  // useCallback\n  const completeTodo = useCallback(\n    () =>\n      dispatch(\n        todosOperations.toggleCompleted({\n          id,\n          completed: !completed,\n        }),\n      ),\n    [dispatch, id, completed],\n  );\n\n  return (\n    <>\n      <label>\n        <Checkbox\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={completeTodo}\n          color=\"primary\"\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n      </label>\n      <p className=\"TodoList__text\">{text}</p>\n      <IconButton\n        type=\"button\"\n        className=\"TodoList__btn\"\n        onClick={deleteTodo}\n        disabled={!completed}\n        color=\"primary\"\n        aria-label=\"delete todo\"\n        component=\"span\"\n      >\n        <DeleteTwoToneIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport TodoItem from './TodoItem';\nimport { todosSelectors } from '../../redux/todos';\nimport './TodoStyles.scss';\n\nconst TodoList = () => {\n  const todos = useSelector(todosSelectors.getVisibleTodos);\n\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(({ id, text, completed }) => {\n        return (\n          <li\n            key={id}\n            className={classNames('TodoList__item', {\n              'TodoList__item--completed': completed,\n            })}\n          >\n            <TodoItem id={id} text={text} completed={completed} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport todosOperations from '../../redux/todos/todos-operations';\nimport { Button, TextField } from '@material-ui/core';\n\nexport default function TodoEditor({ onCloseModal }) {\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  // useCallback\n  const handleChange = useCallback(e => {\n    setMessage(e.currentTarget.value);\n  }, []);\n\n  // useCallback\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n\n      if (message === '') {\n        alert('Заполни текст Todo');\n      }\n      dispatch(todosOperations.addTodo(message));\n      onCloseModal();\n      setMessage('');\n    },\n    [dispatch, message, onCloseModal],\n  );\n\n  return (\n    <form className=\"TodoEditor\" onSubmit={handleSubmit}>\n      <label className=\"TodoEditor__textarea-label\">\n        <TextField\n          className=\"TodoEditor__textarea\"\n          autoComplete=\"off\"\n          value={message}\n          onChange={handleChange}\n          id=\"outlined-multiline-static\"\n          label=\"Todo text\"\n          multiline\n          rows={2}\n          variant=\"outlined\"\n          inputRef={inputRef}\n        />\n      </label>\n      <Button\n        className=\"TodoEditor__btn\"\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n    </form>\n  );\n}\n","import React, { useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter, todosSelectors } from '../../redux/todos';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport { refs } from '../refs';\n// import './TodoStyles.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'block',\n    marginBottom: 30,\n\n    '& > *': {\n      color: '#fff',\n      width: '100%',\n\n      [`@media (min-width: ${refs.tablet}px)`]: {\n        width: 'calc(50% - 5px)',\n      },\n\n      [`@media (min-width: ${refs.desktop}px)`]: {\n        width: 'calc(33% - 5px)',\n      },\n    },\n\n    '& .MuiFormLabel-root.Mui-focused': {\n      color: '#6ecab6',\n    },\n\n    '& .MuiInputBase-input.MuiInput-input': {\n      borderBottom: '2px solid #666',\n      borderRadius: 0,\n    },\n\n    '& .MuiInput-underline:after': {\n      borderBottom: '2px solid white',\n    },\n\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #666',\n    },\n  },\n}));\n\nexport default function TodoFilter() {\n  const dispatch = useDispatch();\n  const filterRef = useRef();\n  const value = useSelector(todosSelectors.getFilter);\n  const onChange = useCallback(e => dispatch(changeFilter(e.target.value)), [\n    dispatch,\n  ]);\n\n  const s = useStyles();\n\n  // useEffect(() => {\n  //   filterRef.current.focus();\n  // });\n\n  return (\n    <TextField\n      type=\"text\"\n      className={s.root}\n      autoComplete=\"off\"\n      list=\"\"\n      value={value}\n      onChange={onChange}\n      id=\"outlined-basic\"\n      label=\"Filter by name\"\n      inputRef={filterRef}\n    />\n  );\n}\n","// Reused Modal\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.scss';\n\nconst reusedModalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  // Close by ESC\n  useEffect(() => {\n    const handleKeyDown = e => {\n      e.code === 'Escape' && onClose();\n    };\n\n    // componentDidMount()\n    window.addEventListener('keydown', handleKeyDown);\n\n    // componentWillUnmount()\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  // Close by Backdrop\n  const handleBackdropClick = e => {\n    e.currentTarget === e.target && onClose();\n  };\n\n  return createPortal(\n    <div className=\"Modal__backdrop\" onClick={handleBackdropClick}>\n      <div className=\"Modal__content\">{children}</div>\n    </div>,\n    reusedModalRoot,\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { todosOperations } from '../../redux/todos';\nimport Stats from './TodoStats';\nimport TodoList from './TodoList';\nimport TodoEditor from './TodoEditor';\nimport TodoFilter from './TodoFilter';\nimport { Button, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Modal from '../Modal';\nimport './TodoStyles.scss';\n\nexport default function Todos() {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(todosOperations.fetchTodos);\n  }, [dispatch]);\n\n  const toggleModal = useCallback(() => {\n    setShowModal(prevShowModal => !prevShowModal);\n  }, []);\n\n  return (\n    <>\n      <Stats />\n      <Button\n        className=\"ModaOpen__btn\"\n        onClick={toggleModal}\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"button\"\n      >\n        + Add Todo\n      </Button>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <span className=\"ModaClose__btn-wrap\">\n            <IconButton\n              className=\"ModaClose__btn\"\n              onClick={toggleModal}\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </span>\n          <TodoEditor onCloseModal={toggleModal} />\n        </Modal>\n      )}\n\n      <TodoFilter />\n      <TodoList />\n    </>\n  );\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport shortid from 'shortid';\nimport Todos from '../components/Todos';\nimport todoSelectors from '../redux/todos/todos-selectors';\nimport { ToastContainer } from 'react-toastify';\nimport s from './ViewStyles.module.scss';\n\nconst TodoView = ({ location, history }) => {\n  const isLoadingTodos = useSelector(todoSelectors.getLoading);\n\n  const handleGoBack = () => {\n    location.state && location.state.from\n      ? history.push(location.state.from)\n      : history.push('/applications');\n  };\n\n  return (\n    <>\n      <section className={s.section}>\n        <button className={s.goBackBtn} type=\"button\" onClick={handleGoBack}>\n          &#8592; Go back\n        </button>\n        <div className={s.container}>\n          <h1>\n            Todos\n            {isLoadingTodos && <span className={s.Loading}> Loading...</span>}\n          </h1>\n          <Todos />\n          <ToastContainer />\n        </div>\n      </section>\n\n      <ul className={s.useList}>\n        <li className={s.strong}>Hooks:</li>\n        <li>useState</li>\n        <li>useEffect</li>\n        <li>useRef</li>\n        <li>useCallback</li>\n        <li className={s.strong}>Dependencies:</li>\n        <li>use React - Prop Types</li>\n        <li>use ESLint</li>\n        <li>use Prettier</li>\n        <li>use gh-pages</li>\n        <li>use Modern normalize</li>\n        <li>use Node Sass</li>\n        <li>use React JSS</li>\n        <li>use Redux</li>\n        <li>use React Redux</li>\n        <li>use Redux Devtools Extension</li>\n        <li>use Material-UI</li>\n        <li>use axios</li>\n        <li>use classnames</li>\n        <li>use react-router-dom</li>\n        <li>use shortid - id: {shortid.generate()}</li>\n        <li>use Redux Toolkit</li>\n        <li>use Logger for Redux</li>\n        <li>use Redux Persist</li>\n        <li>use JSON Server</li>\n        <li>use Reselect (from Toolkit)</li>\n      </ul>\n    </>\n  );\n};\n\nexport default withRouter(TodoView);\n"],"sourceRoot":""}