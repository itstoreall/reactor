{"version":3,"sources":["components/Admin/AdminPanelStyles.js","components/Admin/Project/ProjectStyles.js","components/utils/projectsAPI.js","components/Admin/Project/Project.jsx","components/Admin/AdminPanel.jsx","views/AdminView.jsx","views/ViewStyles.module.scss"],"names":["useStyles","createUseStyles","Admin","marginBottom","muiBtn","makeStyles","addProjectBtn","projectWrap","inputsWrap","color","refs","primaryColor","tablet","display","requiredWrap","tabletMax","marginRight","width","optionallyWrap","buttonWrap","requestList","muiForm","root","transform","borderColor","padding","primaryWhiteColor","fontSize","axios","defaults","baseURL","headers","common","Authorization","log","console","api","getAllProjects","a","get","data","projects","err","createProject","payload","post","response","statusText","status","Project","toggleForm","onSubmit","useState","setProjects","name","setName","title","setTitle","description","setDescription","requires","setRequires","usedValue","setUsedValue","used","setUsed","page","setPage","source","setSource","src","setSrc","restApi","setRestApi","mf","s","useEffect","then","res","handleInputChange","e","target","value","handleUsed","arr","split","filter","Boolean","className","preventDefault","newProject","toUpperCase","slice","alt","noValidate","autoComplete","TextField","required","id","onChange","label","variant","Checkbox","checked","inputProps","Button","onClick","type","showForm","setshowForm","mb","formWrap","result","catch","message","finally","AdminView","viewTitle","module","exports"],"mappings":"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","file":"static/js/Admin.9fbe5a7d.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// const cancelButton = document.querySelector('#cancelBtn > span');\n\n// s\nexport const useStyles = createUseStyles({\n  Admin: {\n    '& h2': {\n      marginBottom: '30px',\n    },\n\n    '& .addProjectBtn': {\n      marginBottom: 30,\n    },\n\n    '& .requestList': {\n      //\n    },\n  },\n});\n\n// muiBtn\nexport const muiBtn = makeStyles({\n  addProjectBtn: {\n    marginBottom: 30,\n  },\n\n  // '&.MuiButton-containedPrimary': {\n  //   // backgroundColor: 'red',\n  // },\n  // '&.MuiButtonBase-root': {\n  //   '&.MuiButton-root': {\n  //     '&.MuiButton-contained': {\n  //       // '&.makeStyles-root-29': {\n  //       '&.MuiButton-containedPrimary': {\n  //         backgroundColor: 'red',\n  //       },\n  //       // },\n  //     },\n  //   },\n  // },\n  // },\n});\n","import { createUseStyles } from 'react-jss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { refs } from '../../refs';\n\n// s -----------------------------------------\nexport const useStyles = createUseStyles({\n  projectWrap: {\n    //\n  },\n\n  // Wrap\n  inputsWrap: {\n    marginBottom: '20px',\n\n    '& h3': {\n      marginBottom: '20px',\n      color: refs.primaryColor,\n    },\n\n    [`@media (min-width: ${refs.tablet}px)`]: {\n      display: 'flex',\n    },\n  },\n\n  // Required\n  requiredWrap: {\n    // backgroundColor: 'pink',\n\n    [`@media (max-width: ${refs.tabletMax}px)`]: {\n      marginBottom: '20px',\n    },\n\n    [`@media (min-width: ${refs.tablet}px)`]: {\n      marginRight: '20px',\n      width: '50%',\n    },\n  },\n\n  // Optionally\n  optionallyWrap: {\n    // backgroundColor: 'skyblue',\n\n    [`@media (min-width: ${refs.tablet}px)`]: {\n      width: '50%',\n    },\n  },\n\n  // Buttons\n  buttonWrap: {\n    // backgroundColor: 'palevioletred',\n    marginBottom: '40px',\n  },\n\n  // Request List\n  requestList: {\n    // backgroundColor: 'grey',\n  },\n}); // ---------------------------------------\n\n// muiForm -----------------------------------\nexport const muiForm = makeStyles({\n  root: {\n    // TextField Wrap (div)\n    '& .MuiFormControl-root': {\n      width: '100%',\n\n      '&:not(:last-child)': {\n        marginBottom: 20,\n      },\n\n      // Label\n      '& .MuiFormLabel-root': {\n        color: refs.primaryColor,\n\n        // Label upstairs\n        '&.MuiInputLabel-outlined.MuiInputLabel-shrink': {\n          transform: 'translate(14px, -5px) scale(0.65)',\n        },\n\n        // Lable inside\n        '&.MuiInputLabel-outlined': {\n          transform: 'translate(14px, 13px) scale(1)',\n        },\n      },\n\n      // Input Wrap (div)\n      '& .MuiInputBase-root': {\n        '&.MuiOutlinedInput-root': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: refs.primaryColor,\n          },\n\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: refs.primaryColor,\n          },\n\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: refs.primaryColor,\n          },\n        },\n\n        '& .MuiOutlinedInput-input': {\n          padding: '12px 14px',\n        },\n\n        '& .MuiInputBase-input': {\n          color: refs.primaryWhiteColor,\n        },\n\n        // Outline\n        '& .PrivateNotchedOutline-root-3': {\n          '&.MuiOutlinedInput-notchedOutline': {},\n\n          // Legend\n          '& .PrivateNotchedOutline-legendLabelled-5': {\n            fontSize: '0.65em',\n          },\n        },\n      },\n    },\n\n    '& .MuiButton-root': {\n      // Cancel Btn\n      '&#cancelBtn': {\n        marginRight: 10,\n      },\n\n      // Reset Btn\n      '&#resetBtn': {\n        marginRight: 10,\n      },\n    },\n  },\n}); // ---------------------------------------\n","import axios from 'axios';\n\n// const BASE_URL = 'https://reactor-rest-api.herokuapp.com/api';\nconst AUTH_TOKEN =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZDVmOTBjMzAwMTQ1N2Q3YzhiNDVmNCIsImlhdCI6MTYyNjA5MDM3MywiZXhwIjoxNjI2MTc2NzczfQ.QsBhUKTKBpN7l9XVAW_oJbsp7mW7YiTxjlareJUkdRg'; // 14:47\n\n// axios.defaults.baseURL = 'http://localhost:5288/api';\naxios.defaults.baseURL = 'https://reactor-rest-api.herokuapp.com/api';\naxios.defaults.headers.common = { Authorization: `bearer ${AUTH_TOKEN}` };\n\nconst { log } = console;\n\n// GET All\nconst getAllProjects = async () => {\n  try {\n    const { data } = await axios.get(`/projects`);\n    const { projects } = data.data;\n\n    return projects;\n  } catch (err) {\n    log('axios: GET All ERR:-->', { err });\n  }\n};\n\n// CREATE\nconst createProject = async payload => {\n  try {\n    const response = await axios.post(`/projects`, payload);\n\n    return `${response.statusText}: ${response.status}`;\n  } catch (err) {\n    log('axios CREATE ERR:-->', { err });\n  }\n};\n\nconst api = { getAllProjects, createProject };\nexport default api;\n","import { useState, useEffect } from 'react';\nimport { useStyles, muiForm } from './ProjectStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport api from '../../utils/projectsAPI';\n\nconst { log } = console;\n\nconst Project = ({ toggleForm, onSubmit }) => {\n  const [projects, setProjects] = useState([]);\n  log(projects);\n  // Create Project\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Used\n  const [requires, setRequires] = useState('');\n  const [usedValue, setUsedValue] = useState('');\n  const [used, setUsed] = useState([]);\n\n  const [page, setPage] = useState('');\n  const [source, setSource] = useState('');\n  const [src, setSrc] = useState([]);\n  const [restApi, setRestApi] = useState(false);\n\n  const mf = muiForm();\n  const s = useStyles();\n\n  useEffect(() => api.getAllProjects().then(res => setProjects(res)), []);\n\n  // Change Input value\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    name === 'name'\n      ? setName(value)\n      : name === 'title'\n      ? setTitle(value)\n      : name === 'description'\n      ? setDescription(value)\n      : name === 'requires'\n      ? setRequires(value)\n      : name === 'used'\n      ? handleUsed(value)\n      : name === 'page'\n      ? setPage(value)\n      : name === 'source'\n      ? setSource(value)\n      : name === 'src'\n      ? setSrc(value)\n      : log('ERROR Input value!');\n  };\n\n  // Checkbox\n  const handleChange = e => {\n    setRestApi(e.target.checked);\n  };\n\n  // Used\n  const handleUsed = value => {\n    setUsedValue([value]);\n    const arr = value.split(' ');\n\n    setUsed(arr.filter(Boolean));\n    // log('used', used);\n  };\n\n  // Create new Project\n  const handleCreateNewProject = e => {\n    e.preventDefault();\n\n    const newProject = {\n      name,\n      title: title[0]?.toUpperCase() + title.slice(1),\n      description: description[0]?.toUpperCase() + description.slice(1),\n      alt: title,\n      requires: requires[0]?.toUpperCase() + requires.slice(1),\n      used,\n      page,\n      source,\n      src: [\n        `mob_${name}_450_wp`,\n        `mob_${name}_900_wp`,\n        `mob_${name}_450`,\n        `mob_${name}_900`,\n        `tab_${name}_354_wp`,\n        `tab_${name}_708_wp`,\n        `tab_${name}_354`,\n        `tab_${name}_708`,\n        `desk_${name}_370_wp`,\n        `desk_${name}_740_wp`,\n        `desk_${name}_370`,\n        `desk_${name}_740`,\n      ],\n      restApi,\n    };\n\n    onSubmit(newProject);\n\n    /*\n    setName('');\n    setTitle('');\n    setDescription('');\n    setRequires('');\n    setUsed('');\n    setPage('');\n    setSource('');\n    setSrc('');\n    setRestApi(false);\n    */\n  };\n\n  const resetForm = () => {\n    setName('');\n    setTitle('');\n    setDescription('');\n    setRequires('');\n    setUsed('');\n    setPage('');\n    setSource('');\n    setSrc('');\n    setRestApi(false);\n  };\n\n  return (\n    <section className={s.projectWrap}>\n      <form\n        onSubmit={handleCreateNewProject}\n        className={mf.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div className={s.inputsWrap}>\n          <div className={s.requiredWrap}>\n            <h3>Required:</h3>\n            <TextField\n              required\n              id=\"outlined-basic\"\n              name=\"name\"\n              value={name}\n              onChange={handleInputChange}\n              label=\"Name\"\n              variant=\"outlined\"\n            />\n            <TextField\n              required\n              id=\"outlined-basic\"\n              name=\"title\"\n              value={title}\n              onChange={handleInputChange}\n              label=\"Title\"\n              variant=\"outlined\"\n            />\n            <TextField\n              required\n              id=\"outlined-basic\"\n              name=\"description\"\n              value={description}\n              onChange={handleInputChange}\n              label=\"Description\"\n              variant=\"outlined\"\n            />\n            <TextField\n              required\n              id=\"outlined-basic\"\n              name=\"used\"\n              value={usedValue}\n              onChange={handleInputChange}\n              label=\"Used\"\n              variant=\"outlined\"\n            />\n            <TextField\n              required\n              id=\"outlined-basic\"\n              name=\"source\"\n              value={source}\n              onChange={handleInputChange}\n              label=\"Source\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div className={s.optionallyWrap}>\n            <h3>Optionally:</h3>\n            <TextField\n              id=\"outlined-basic\"\n              name=\"requires\"\n              value={requires}\n              onChange={handleInputChange}\n              label=\"Requires\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outlined-basic\"\n              name=\"page\"\n              value={page}\n              onChange={handleInputChange}\n              label=\"Page\"\n              variant=\"outlined\"\n            />\n            <Checkbox\n              checked={restApi}\n              color=\"primary\"\n              onChange={handleChange}\n              inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n          </div>\n        </div>\n\n        <div className={s.buttonWrap}>\n          <Button\n            onClick={toggleForm}\n            id=\"cancelBtn\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n\n          <Button\n            onClick={resetForm}\n            id=\"resetBtn\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Reset\n          </Button>\n\n          <Button\n            id=\"addlBtn\"\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n\n      <ul className={s.requestList}>\n        <li>{name}</li>\n        <li>{title}</li>\n        <li>{description}</li>\n        <li>alt={title}</li>\n        <li>{requires}</li>\n        <li>{used}</li>\n        <li>{page}</li>\n        <li>{source}</li>\n        <li>{src}</li>\n        <li>{restApi ? 'REST-API: true' : null}</li>\n      </ul>\n    </section>\n  );\n};\n\nexport default Project;\n","import { useState } from 'react';\nimport { useStyles, muiBtn } from './AdminPanelStyles';\nimport Project from './Project';\nimport Button from '@material-ui/core/Button';\nimport api from '../utils/projectsAPI';\n\nconst { log } = console;\n\nconst Admin = () => {\n  const [showForm, setshowForm] = useState(false);\n  const s = useStyles();\n  const mb = muiBtn();\n\n  // Project Form\n  const toggleForm = () => setshowForm(!showForm);\n\n  // Submit new Project to the DB\n  const handleSubmit = newProject => {\n    log('Is sent...'); // show Loader\n\n    api\n      .createProject(newProject)\n      .then(result => log(result))\n      .catch(err => log('AdminPanel --> Submit ERROR Message:', err.message))\n      .finally(() => log('Finally')); // hide Loader\n  };\n\n  return (\n    <div className={s.Admin}>\n      <h2>Portfolio</h2>\n\n      <div className={s.formWrap}>\n        {showForm ? (\n          <Project toggleForm={toggleForm} onSubmit={handleSubmit} />\n        ) : (\n          <Button\n            onClick={toggleForm}\n            className={mb.addProjectBtn}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            + Add project\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n","import Admin from '../components/Admin';\nimport s from './ViewStyles.module.scss';\n\nconst AdminView = () => {\n  return (\n    <div className={s.AdminView}>\n      <h1 className={s.viewTitle}>Admin panel</h1>\n      <Admin />\n    </div>\n  );\n};\n\nexport default AdminView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminView\":\"ViewStyles_AdminView__1NeMT\",\"viewTitle\":\"ViewStyles_viewTitle__2Dz46\"};"],"sourceRoot":""}