{"version":3,"sources":["components/Header/Header.jsx","redux/navMenu/actions.js","components/NavMenu/NavStyles.js","components/routes.js","components/NavMenu/Navigation.jsx","components/NavMenu/NavMenu.jsx","components/Content/ContentStyles.js","components/Content/Content.jsx","AppStyles.js","App.js","redux/navMenu/reducer.js","redux/store.js","index.js"],"names":["Header","className","to","replace","toggleVisible","createAction","createUseStyles","NavMenu","position","top","right","navMenuButton","width","padding","left","bottom","fontSize","textTransform","cursor","color","backgroundColor","border","outline","Navigation","display","flexDirection","height","listStyle","margin","paddingTop","minWidth","overflow","link","textDecoration","activeLink","routes","path","label","component","lazy","exact","showInMenu","onToggleVisible","s","useStyles","handleToggleNavMenu","map","activeClassName","onClick","mapDispatch","connect","state","visible","navMenu","handleNavMenu","type","Content","fallback","Component","App","maxWidth","navMenuReducer","createReducer","_","payload","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","navMenuPersistConfig","key","storage","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"mMAEe,SAASA,IACtB,OACE,cAAC,IAAD,CAASC,UAAU,OAAOC,GAAG,IAAIC,SAAO,EAAxC,qB,YCDSC,EAAgBC,YAAa,mB,gBCG3BC,cAAgB,CAE7BC,QAAS,CACPC,SAAU,WACVC,IAAK,EACLC,MAAO,GAGTC,cAAe,CACbH,SAAU,WACVE,MAAO,EACPE,MAAO,IACPC,QAAS,CACPJ,IAAK,GACLK,KAAM,GACNJ,MAAO,GACPK,OAAQ,IAEVC,SAAU,GACVC,cAAe,YACfC,OAAQ,UACRC,MAAO,QACPC,gBAAiB,OACjBC,OAAQ,OACRC,QAAS,OAET,UAAW,CACTF,gBAAiB,WAKrBG,WAAW,aACTC,QAAS,OACTC,cAAe,SACfb,MAAO,QACPc,OAAQ,QAERC,UAAW,OACXC,OAAQ,EACRf,QAAS,GACTgB,WAAY,IAEZC,SAAU,IACVC,SAAU,OACVX,gBAAiB,WAbT,6BApCG,IAoCH,OAe6B,CACnCR,MAAO,MAIXoB,KAAM,CACJZ,gBAAiB,UACjBa,eAAgB,OAChBpB,QAAS,GACTG,SAAU,GACVG,MAAO,OAEP,UAAW,CACTA,MAAO,OACPC,gBAAiB,SAIrBc,WAAY,CACVd,gBAAiB,SACjBD,MAAO,UAEP,UAAW,CACTA,MAAO,OACPC,gBAAiB,aC9DVe,EAAS,CACpB,CACEC,KAAM,IACNC,MAAO,OACPC,UAjBaC,gBAAK,kBACpB,gCAiBEC,OAAO,EACPC,YAAY,GAEd,CACEL,KAAM,gBACNC,MAAO,eACPC,UArBoBC,gBAAK,kBAC3B,gCAqBEE,YAAY,GAEd,CACEL,KAAM,SACNC,MAAO,QACPC,UAxBaC,gBAAK,kBACpB,sDAwBEE,YAAY,GAEd,CACEL,KAAM,YACNC,MAAO,WACPC,UA3BiBC,gBAAK,kBACxB,gCA2BEE,YAAY,ICnCD,SAASlB,EAAT,GAA0C,IAApBmB,EAAmB,EAAnBA,gBAC7BC,EAAIC,IAEJC,EAAsB,kBAAMH,KAElC,OACE,qBAAKzC,UAAW0C,EAAEpB,WAAlB,SACGY,EAAOW,KAAI,gBAAGV,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,SAAgBI,WAExB,cAAC,IAAD,CAEEvC,GAAIkC,EACJI,OAAK,EACLvC,UAAW0C,EAAEX,KACbe,gBAAiBJ,EAAET,WACnBc,QAASH,EACT1C,SAAO,EAPT,SASGkC,GARID,GAUL,UCnBZ,IAmBMa,EAAc,CAAE7C,iBAEP8C,eANE,SAAAC,GAAK,MAAK,CACzBC,QAASD,EAAME,QAAQD,WAKQH,EAAlBC,EArBC,SAAC,GAAgC,IAA9BE,EAA6B,EAA7BA,QAAShD,EAAoB,EAApBA,cACpBuC,EAAIC,IAEJU,EAAgB,kBAAMlD,GAAegD,IAE3C,OACE,sBAAKnD,UAAW0C,EAAEpC,QAAlB,UACE,wBAAQN,UAAW0C,EAAEhC,cAAe4C,KAAK,SAASP,QAASM,EAA3D,SACGF,EAAU,YAAc,cAE1BA,GAAW,cAAC7B,EAAD,CAAYmB,gBAAiBY,U,OCbhChD,cAAgB,CAC7BkD,QAAS,CAGP3C,QAAS,MCDE,SAAS2C,IACtB,IAAMb,EAAIC,IAEV,OACE,qBAAK3C,UAAW0C,EAAEa,QAAlB,SACE,cAAC,WAAD,CAAUC,SAAU,mDAApB,SACE,eAAC,IAAD,WACGtB,EAAOW,KAAI,gBAAGV,EAAH,EAAGA,KAAMI,EAAT,EAASA,MAAkBkB,EAA3B,EAAgBpB,UAAhB,OACV,cAAC,IAAD,CAAkBF,KAAMA,EAAMI,MAAOA,EAAOF,UAAWoB,GAA3CtB,MAEd,cAAC,IAAD,CAAUlC,GAAG,aCXvB,IAEeI,cAAgB,CAC7BqD,IAAI,aACFnD,SAAU,WACVkB,OAAQ,QACRd,MAAO,OACPgB,OAAQ,SACRR,gBAAiB,QALhB,6BAHW,IAGX,OAOqC,CACpCwC,SAAU,SCVD,SAASD,IACtB,IAAMhB,EAAIC,IAEV,OACE,sBAAK3C,UAAW0C,EAAEgB,IAAlB,UACE,cAAC3D,EAAD,IACA,cAACwD,EAAD,IACA,cAAC,EAAD,O,sDCGSK,EANQC,YALF,CACnBV,SAAS,GAIyB,eACjChD,GAAgB,SAAC2D,EAAD,SAAqB,CACpCX,QADe,EAAMY,aCMnBC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAIIC,EAAuB,CAC3BC,IAAK,UACLC,aAGIC,EAAQC,YAAe,CAE3BC,QAAS,CACP5B,QAAS6B,YAAeN,EAAsBf,IAEhDI,aACAkB,UAAUC,IAMG,GAAEL,QAAOM,UAFNC,YAAaP,I,YC/B/BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaW,QAAS,2CAAmBL,UAAWN,EAAMM,UAA1D,SACE,cAAC,IAAD,UACE,cAAC1B,EAAD,YAKRgC,SAASC,eAAe,W","file":"static/js/main.51e78844.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <NavLink className=\"logo\" to=\"/\" replace>\n      Reactor\n    </NavLink>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\n// Ссылка на функцию со свойством type\nexport const toggleVisible = createAction('navMenu/visible');\n\n/* Action toggleVisible #1\n\nexport const toggleVisible = visible => ({\n  type: 'navMenu/visible',\n  payload: !visible,\n});\n*/\n","import { createUseStyles } from 'react-jss';\n\nconst modile = 414;\n// const tablet = 768;\n// const desktop = 900;\n\nexport default createUseStyles({\n  // NavMenu\n  NavMenu: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n\n  navMenuButton: {\n    position: 'absolute',\n    right: 0,\n    width: 150,\n    padding: {\n      top: 10,\n      left: 20,\n      right: 20,\n      bottom: 10,\n    },\n    fontSize: 16,\n    textTransform: 'uppercase',\n    cursor: 'pointer',\n    color: 'white',\n    backgroundColor: 'teal',\n    border: 'none',\n    outline: 'none',\n\n    '&:hover': {\n      backgroundColor: 'tomato',\n    },\n  },\n\n  // Navigation\n  Navigation: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100vw',\n    height: '100vh',\n    // borderRight: '1px solid teal',\n    listStyle: 'none',\n    margin: 0,\n    padding: 10,\n    paddingTop: 100,\n\n    minWidth: 130,\n    overflow: 'auto',\n    backgroundColor: 'skyblue',\n\n    [`@media (min-width: ${modile}px)`]: {\n      width: 250,\n    },\n  },\n\n  link: {\n    backgroundColor: 'inherit',\n    textDecoration: 'none',\n    padding: 10,\n    fontSize: 22,\n    color: 'teal',\n\n    '&:hover': {\n      color: '#fff',\n      backgroundColor: 'teal',\n    },\n  },\n\n  activeLink: {\n    backgroundColor: 'tomato',\n    color: '#f1f1f1',\n\n    '&:hover': {\n      color: '#fff',\n      backgroundColor: 'tomato',\n    },\n  },\n});\n","import { lazy } from 'react';\n\nconst HomeView = lazy(() =>\n  import('../views/HomeView' /*webpackChunkName: 'Home'*/),\n);\nconst ApplicationView = lazy(() =>\n  import('../views/ApplicationView' /*webpackChunkName: 'Applications'*/),\n);\nconst BookView = lazy(() =>\n  import('../views/BookView' /*webpackChunkName: 'Book'*/),\n);\nconst ContactsView = lazy(() =>\n  import('../views/ContactView' /*webpackChunkName: 'Contacts'*/),\n);\n\nexport const routes = [\n  {\n    path: '/',\n    label: 'Home',\n    component: HomeView,\n    exact: true,\n    showInMenu: true,\n  },\n  {\n    path: '/applications',\n    label: 'Applications',\n    component: ApplicationView,\n    showInMenu: true,\n  },\n  {\n    path: '/books',\n    label: 'Books',\n    component: BookView,\n    showInMenu: true,\n  },\n  {\n    path: '/contacts',\n    label: 'Contacts',\n    component: ContactsView,\n    showInMenu: true,\n  },\n];\n","import { NavLink } from 'react-router-dom';\nimport useStyles from './NavStyles';\nimport { routes } from '../routes';\n\nexport default function Navigation({ onToggleVisible }) {\n  const s = useStyles();\n\n  const handleToggleNavMenu = () => onToggleVisible();\n\n  return (\n    <div className={s.Navigation}>\n      {routes.map(({ path, label, showInMenu }) =>\n        showInMenu ? (\n          <NavLink\n            key={path}\n            to={path}\n            exact\n            className={s.link}\n            activeClassName={s.activeLink}\n            onClick={handleToggleNavMenu}\n            replace\n          >\n            {label}\n          </NavLink>\n        ) : null,\n      )}\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport { toggleVisible } from '../../redux/navMenu/actions';\nimport Navigation from './Navigation';\nimport useStyles from './NavStyles';\n\nconst NavMenu = ({ visible, toggleVisible }) => {\n  const s = useStyles();\n\n  const handleNavMenu = () => toggleVisible(!visible);\n\n  return (\n    <div className={s.NavMenu}>\n      <button className={s.navMenuButton} type=\"button\" onClick={handleNavMenu}>\n        {visible ? 'Hide menu' : 'Show menu'}\n      </button>\n      {visible && <Navigation onToggleVisible={handleNavMenu} />}\n    </div>\n  );\n};\n\nconst mapState = state => ({\n  visible: state.navMenu.visible,\n});\n\nconst mapDispatch = { toggleVisible };\n\nexport default connect(mapState, mapDispatch)(NavMenu);\n\n/* NavMenu #1 (with local state)\n\n export default function NavMenu() {\n  const [visible, setVisible] = useState(false);\n  const s = useStyles();\n\n  const toggleVisible = () => setVisible(prevVisible => !prevVisible);\n\n  return (\n    <div className={s.NavMenu}>\n      <button className={s.navMenuButton} type=\"button\" onClick={toggleVisible}>\n        {visible ? 'Hide menu' : 'Show menu'}\n      </button>\n      {visible && <Navigation onToggleVisible={toggleVisible} />}\n    </div>\n  );\n}\n*/\n","import { createUseStyles } from 'react-jss';\n\nexport default createUseStyles({\n  Content: {\n    // flex: 1,\n    // overflow: 'auto',\n    padding: 30,\n  },\n});\n","import { Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { routes } from '../routes';\nimport useStyles from './ContentStyles';\n\nexport default function Content() {\n  const s = useStyles();\n\n  return (\n    <div className={s.Content}>\n      <Suspense fallback={<p>Content Loading...</p>}>\n        <Switch>\n          {routes.map(({ path, exact, component: Component }) => (\n            <Route key={path} path={path} exact={exact} component={Component} />\n          ))}\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n","import { createUseStyles } from 'react-jss';\n\n// const modile = 375;\n// const tablet = 768;\nconst desktop = 900;\n\nexport default createUseStyles({\n  App: {\n    position: 'relative',\n    height: '100vh',\n    width: '100%',\n    margin: '0 auto',\n    backgroundColor: 'pink',\n\n    [`@media (min-width: ${desktop}px)`]: {\n      maxWidth: 1440,\n    },\n  },\n});\n","import Header from './components/Header';\nimport NavMenu from './components/NavMenu';\nimport Content from './components/Content';\nimport useStyles from './AppStyles';\n\nexport default function App() {\n  const s = useStyles();\n\n  return (\n    <div className={s.App}>\n      <Header />\n      <Content />\n      <NavMenu />\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { toggleVisible } from './actions';\n\n// Initial state of the Nav Menu\nconst initialState = {\n  visible: false,\n};\n\n// Nav Menu reducer\nconst navMenuReducer = createReducer(initialState, {\n  [toggleVisible]: (_, { payload }) => ({\n    visible: payload,\n  }),\n});\n\nexport default navMenuReducer;\n\n/* Reducer #1\n\nimport { VISIBLE } from './types';\n\nconst initialState = {\n  visible: false,\n};\n\n// Nav Menu reducer\nconst navMenuReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case VISIBLE:\n      return {\n        visible: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default navMenuReducer;\n*/\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // link to localStorage\nimport logger from 'redux-logger';\nimport navMenuReducer from './navMenu/reducer';\n\n// Middleware\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// Persist Config\nconst navMenuPersistConfig = {\n  key: 'navMenu',\n  storage,\n};\n\nconst store = configureStore({\n  // Root Reducer\n  reducer: {\n    navMenu: persistReducer(navMenuPersistConfig, navMenuReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\n// Persistor\nconst persistor = persistStore(store);\n\nexport default { store, persistor }; // eslint-disable-line\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<p>Loading...</p>} persistor={store.persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n/**\n * - HashRouter as Router прокидывает в низ, в компоненты\n * свойства history и location\n */\n"],"sourceRoot":""}