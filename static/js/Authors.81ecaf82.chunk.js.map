{"version":3,"sources":["views/ViewStyles.module.scss","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/AuthorBooks/AuthorBooks.jsx","views/AuthorView.jsx"],"names":["module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","AuthorBooks","books","map","book","to","id","title","AuthorView","state","authors","a","axios","get","data","this","setState","match","props","className","s","section","author","url","replace","name","path","render","bookId","Number","params","authorId","find","Component"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,QAAU,4BAA4B,MAAQ,4B,kDCCtG,SAASC,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,OAAAC,EAAA,GAAeP,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOkB,0BAChBlB,OAAOmB,iBAAiBT,EAAQV,OAAOkB,0BAA0BJ,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOiB,eAAeP,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,E,2GCnBMU,EAZK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACE,cAAC,IAAD,CAASC,GAAE,8BAAyBD,EAAKE,IAAzC,SAAgDF,EAAKG,SAD9CH,EAAKE,U,iBCAhBE,E,4MACJC,MAAQ,CACNC,QAAS,I,8FAGX,8BAAAC,EAAA,sEACyBC,IAAMC,IAAN,8CADzB,gBACUC,EADV,EACUA,KAIRC,KAAKC,SAAS,CAAEN,QAASI,IAL3B,gD,0EAQA,WAAU,IACAG,EAAUF,KAAKG,MAAfD,MACAP,EAAYK,KAAKN,MAAjBC,QAER,OACE,mCACE,0BAASS,UAAWC,IAAEC,QAAtB,UACE,8CACA,6BACGX,EAAQP,KAAI,SAAAmB,GAAM,OACjB,6BACE,cAAC,IAAD,CAASjB,GAAE,UAAKY,EAAMM,IAAX,YAAkBD,EAAOhB,IAAMkB,SAAO,EAAjD,SACGF,EAAOG,QAFHH,EAAOhB,SAQpB,cAAC,IAAD,CACEoB,KAAI,UAAKT,EAAMS,KAAX,cACJC,OAAQ,SAAAT,GACN,IAAMU,EAASC,OAAOX,EAAMD,MAAMa,OAAOC,UACnCT,EAASZ,EAAQsB,MAAK,qBAAG1B,KAAgBsB,KAE/C,OACEN,GACE,qCACE,kDACA,cAAC,EAAD,OAAiBJ,GAAjB,IAAwBhB,MAAOoB,EAAOpB,wB,GAzCjC+B,aAqDVzB","file":"static/js/Authors.81ecaf82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ViewStyles_section__AuNei\",\"useList\":\"ViewStyles_useList__3vLRS\",\"toast\":\"ViewStyles_toast__3PgFy\"};","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { NavLink } from 'react-router-dom';\n\nconst AuthorBooks = ({ books }) => {\n  return (\n    <ul>\n      {books.map(book => (\n        <li key={book.id}>\n          <NavLink to={`/applications/books/${book.id}`}>{book.title}</NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default AuthorBooks;\n\n// export default class AuthorBooks extends Component {\n//   // state = {\n//   //   books: [],\n//   // };\n\n//   // componentDidMount() {\n//   //   // При первом рендере сработает componentDidMount\n//   //   const authorId = Number(this.props.match.params.authorId);\n//   //   const authors = this.props.authors;\n//   //   console.log('cDM', authorId, authors);\n\n//   //   // Получаем все книги автора по его id\n//   //   const { books } = authors.find(author => author.id === authorId);\n//   //   console.log(books);\n\n//   //   this.setState({ books });\n//   // }\n\n//   // componentDidUpdate() {\n//   //   // При повторном нажатии на имя автора сработает componentDidUpdate\n//   //   const authorId = Number(this.props.match.params.authorId);\n//   //   const authors = this.props.authors;\n//   //   console.log('cDU', authorId, authors);\n\n//   //   const author = authors.find(author => author.id === authorId);\n//   //   console.log(author);\n//   // }\n\n//   render() {\n//     const { authorId } = this.props.match.params;\n//     // const { books } = this.state;\n//     return (\n//       <>\n//         <h3>Author's book {`${authorId}`} Component</h3>\n//         {/* <ul>\n//           {books.map(book => (\n//             <li key={book.id}>{book.title}</li>\n//           ))}\n//         </ul> */}\n//       </>\n//     );\n//   }\n// }\n","import axios from 'axios';\nimport { Component } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport AuthorBooks from '../components/AuthorBooks';\nimport s from './ViewStyles.module.scss';\n\nclass AuthorView extends Component {\n  state = {\n    authors: [],\n  };\n\n  async componentDidMount() {\n    const { data } = await axios.get(\n      `http://localhost:2222/authors?_embed=books`,\n    );\n\n    this.setState({ authors: data });\n  }\n\n  render() {\n    const { match } = this.props;\n    const { authors } = this.state;\n\n    return (\n      <>\n        <section className={s.section}>\n          <h1>Authors View</h1>\n          <ul>\n            {authors.map(author => (\n              <li key={author.id}>\n                <NavLink to={`${match.url}/${author.id}`} replace>\n                  {author.name}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n\n          <Route\n            path={`${match.path}/:authorId`}\n            render={props => {\n              const bookId = Number(props.match.params.authorId);\n              const author = authors.find(({ id }) => id === bookId);\n\n              return (\n                author && (\n                  <>\n                    <h3>Books by authors</h3>\n                    <AuthorBooks {...props} books={author.books} />\n                  </>\n                )\n              );\n            }}\n          />\n        </section>\n      </>\n    );\n  }\n}\n\nexport default AuthorView;\n"],"sourceRoot":""}